syntax = "proto3";

package TaskListGrpcServer.Protos;

service TaskList {
  rpc GetAllTask (NullRequest) returns (ListTaskReply);
  rpc AddTask (TaskProto) returns (TaskProtoReply);
  rpc DeleteTask (TaskProto) returns (ExaminationReply);
  rpc UpdateTask (TaskProto) returns (ExaminationReply);

  rpc GetAllTag (NullRequest) returns (ListTagReply);
  rpc AddTag (TagProto) returns (TagProtoReply);
  rpc DeleteTag (TagProto) returns (ExaminationReply);
  rpc UpdateTag (TagProto) returns (ExaminationReply);

  rpc GetAllEmployee (NullRequest) returns (ListEmployeeReply);
  rpc AddEmployee (EmployeeProto) returns (EmployeeProtoReply);
  rpc DeleteEmployee (EmployeeProto) returns (ExaminationReply);
  rpc UpdateEmployee (EmployeeProto) returns (ExaminationReply);
}

// ------------
// Core Message
// ------------

message TaskProto {
	int32 id = 1;
	string name_task = 2;
	string task_description = 3;
	Status current_state = 4;
	EmployeeProto executor = 5;
	TagsProto tags = 6;
}

message Tasks{
	repeated TaskProto list = 2;
}

message TagProto {
	int32 id = 1;
	string name = 2;
}

message TagsProto {
    repeated TagProto list_tag = 1;
}

message EmployeeProto{
	int32 id = 1;
	string name = 2;
	string Surname = 3;
}

message EmployeesProto{
	repeated EmployeeProto reply_list_employee = 1;
}

enum Status {
  NEW = 0;
  ASSIGNED = 1;
  DISCUSSION = 2;
  COMPLETED = 3;
  CLOSED = 4;
}

// -------
// Request
// -------

message NullRequest{}

// -------
// Replies
// -------

message ExaminationReply {
  bool success = 1;
}

message TagProtoReply{
	ExaminationReply error = 1;
	TagProto tag = 2;
}

message TaskProtoReply{
	ExaminationReply error = 1;
	TaskProto task = 2;
}

message EmployeeProtoReply{
	ExaminationReply error = 1;
	EmployeeProto employee = 2;
}

message ListEmployeeReply{
	bool success = 1;
	EmployeesProto employeeslist = 2; 
}

message ListTaskReply {
	bool success = 1;
    Tasks taskslist = 2;
}

message ListTagReply {
	bool success = 1;
    TagsProto Tagslist = 2;
}